Traceback (most recent call last):
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
total_energy_history = potential_energy_history + kinetic_energy_history
temperature_history = 2 * kinetic_energy_history / (2 * n_particles - 2)

fig, axs = plt.subplot_mosaic([[0, 1], [2, 3]], figsize=(12, 12))

axs[0].plot(np.arange(n_steps - 2000, n_steps), potential_energy_history[-2000:], 'tab:gray', label='Potential Energy', alpha=0.5)
axs[0].set_title('Potential Energy')
axs[0].set_xlabel('Time Step')
axs[0].set_ylabel('Energy')
avg_potential_energy = np.mean(potential_energy_history[-2000:])
axs[0].axhline(y=avg_potential_energy, color='r', linestyle='--', label='Average Potential Energy')

axs[1].plot(np.arange(n_steps - 2000, n_steps), kinetic_energy_history[-2000:], 'tab:gray', label='Kinetic Energy', alpha=0.5)
axs[1].set_title('Kinetic Energy')
axs[1].set_xlabel('Time Step')
axs[1].set_ylabel('Energy')
avg_kinetic_energy = np.mean(kinetic_energy_history[-2000:])
axs[1].axhline(y=avg_kinetic_energy, color='r', linestyle='--', label='Average Kinetic Energy')

axs[2].plot(np.arange(n_steps - 2000, n_steps), total_energy_history[-2000:], 'tab:gray', label='Total Energy', alpha=0.5)
axs[2].set_title('Total Energy')
axs[2].set_xlabel('Time Step')
axs[2].set_ylabel('Energy')
avg_total_energy = np.mean(total_energy_history[-2000:])
axs[2].axhline(y=avg_total_energy, color='r', linestyle='--', label='Average Total Energy')

axs[3].plot(np.arange(n_steps - 2000, n_steps), temperature_history[-2000:], 'tab:gray', label='Temperature', alpha=0.5)
axs[3].set_title('Temperature')
axs[3].set_xlabel('Time Step')
axs[3].set_ylabel('Temperature')
avg_temperature = np.mean(temperature_history[-2000:])
axs[3].axhline(y=avg_temperature, color='tab:red', linestyle='--', label='Average Temperature')
axs[3].annotate(f'Average Temperature: {avg_temperature:.2f}', xy=(0.5, 0.9), xycoords='axes fraction', ha='center', va='center')
axs[3].axhline(y=temperature, color='tab:blue', linestyle='--', label='Desired Temperature')
axs[3].annotate(f'Desired Temperature: {temperature}', xy=(0.5, 0.8), xycoords='axes fraction', ha='center', va='center')

plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[8], line 6[0m
[1;32m      2[0m temperature_history [38;5;241m=[39m [38;5;241m2[39m [38;5;241m*[39m kinetic_energy_history [38;5;241m/[39m ([38;5;241m2[39m [38;5;241m*[39m n_particles [38;5;241m-[39m [38;5;241m2[39m)
[1;32m      4[0m fig, axs [38;5;241m=[39m plt[38;5;241m.[39msubplot_mosaic([[[38;5;241m0[39m, [38;5;241m1[39m], [[38;5;241m2[39m, [38;5;241m3[39m]], figsize[38;5;241m=[39m([38;5;241m12[39m, [38;5;241m12[39m))
[0;32m----> 6[0m [43maxs[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[38;5;241;43m.[39;49m[43mplot[49m[43m([49m[43mnp[49m[38;5;241;43m.[39;49m[43marange[49m[43m([49m[43mn_steps[49m[43m [49m[38;5;241;43m-[39;49m[43m [49m[38;5;241;43m2000[39;49m[43m,[49m[43m [49m[43mn_steps[49m[43m)[49m[43m,[49m[43m [49m[43mpotential_energy_history[49m[43m[[49m[38;5;241;43m-[39;49m[38;5;241;43m2000[39;49m[43m:[49m[43m][49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43mtab:gray[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mlabel[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mPotential Energy[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43malpha[49m[38;5;241;43m=[39;49m[38;5;241;43m0.5[39;49m[43m)[49m
[1;32m      7[0m axs[[38;5;241m0[39m][38;5;241m.[39mset_title([38;5;124m'[39m[38;5;124mPotential Energy[39m[38;5;124m'[39m)
[1;32m      8[0m axs[[38;5;241m0[39m][38;5;241m.[39mset_xlabel([38;5;124m'[39m[38;5;124mTime Step[39m[38;5;124m'[39m)

File [0;32m~/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/matplotlib/axes/_axes.py:1779[0m, in [0;36mAxes.plot[0;34m(self, scalex, scaley, data, *args, **kwargs)[0m
[1;32m   1536[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m   1537[0m [38;5;124;03mPlot y versus x as lines and/or markers.[39;00m
[1;32m   1538[0m 
[0;32m   (...)[0m
[1;32m   1776[0m [38;5;124;03m(``'green'``) or hex strings (``'#008000'``).[39;00m
[1;32m   1777[0m [38;5;124;03m"""[39;00m
[1;32m   1778[0m kwargs [38;5;241m=[39m cbook[38;5;241m.[39mnormalize_kwargs(kwargs, mlines[38;5;241m.[39mLine2D)
[0;32m-> 1779[0m lines [38;5;241m=[39m [[38;5;241m*[39m[38;5;28mself[39m[38;5;241m.[39m_get_lines([38;5;28mself[39m, [38;5;241m*[39margs, data[38;5;241m=[39mdata, [38;5;241m*[39m[38;5;241m*[39mkwargs)]
[1;32m   1780[0m [38;5;28;01mfor[39;00m line [38;5;129;01min[39;00m lines:
[1;32m   1781[0m     [38;5;28mself[39m[38;5;241m.[39madd_line(line)

File [0;32m~/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/matplotlib/axes/_base.py:296[0m, in [0;36m_process_plot_var_args.__call__[0;34m(self, axes, data, *args, **kwargs)[0m
[1;32m    294[0m     this [38;5;241m+[39m[38;5;241m=[39m args[[38;5;241m0[39m],
[1;32m    295[0m     args [38;5;241m=[39m args[[38;5;241m1[39m:]
[0;32m--> 296[0m [38;5;28;01myield from[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_plot_args[49m[43m([49m
[1;32m    297[0m [43m    [49m[43maxes[49m[43m,[49m[43m [49m[43mthis[49m[43m,[49m[43m [49m[43mkwargs[49m[43m,[49m[43m [49m[43mambiguous_fmt_datakey[49m[38;5;241;43m=[39;49m[43mambiguous_fmt_datakey[49m[43m)[49m

File [0;32m~/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/matplotlib/axes/_base.py:486[0m, in [0;36m_process_plot_var_args._plot_args[0;34m(self, axes, tup, kwargs, return_kwargs, ambiguous_fmt_datakey)[0m
[1;32m    483[0m     axes[38;5;241m.[39myaxis[38;5;241m.[39mupdate_units(y)
[1;32m    485[0m [38;5;28;01mif[39;00m x[38;5;241m.[39mshape[[38;5;241m0[39m] [38;5;241m!=[39m y[38;5;241m.[39mshape[[38;5;241m0[39m]:
[0;32m--> 486[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mx and y must have same first dimension, but [39m[38;5;124m"[39m
[1;32m    487[0m                      [38;5;124mf[39m[38;5;124m"[39m[38;5;124mhave shapes [39m[38;5;132;01m{[39;00mx[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m and [39m[38;5;132;01m{[39;00my[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m"[39m)
[1;32m    488[0m [38;5;28;01mif[39;00m x[38;5;241m.[39mndim [38;5;241m>[39m [38;5;241m2[39m [38;5;129;01mor[39;00m y[38;5;241m.[39mndim [38;5;241m>[39m [38;5;241m2[39m:
[1;32m    489[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mx and y can be no greater than 2D, but have [39m[38;5;124m"[39m
[1;32m    490[0m                      [38;5;124mf[39m[38;5;124m"[39m[38;5;124mshapes [39m[38;5;132;01m{[39;00mx[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m and [39m[38;5;132;01m{[39;00my[38;5;241m.[39mshape[38;5;132;01m}[39;00m[38;5;124m"[39m)

[0;31mValueError[0m: x and y must have same first dimension, but have shapes (2000,) and (1,)

