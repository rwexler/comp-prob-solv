Traceback (most recent call last):
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt

# Lennard-Jones potential
def U(r, epsilon=1.0, sigma=1.0):
    return 4 * epsilon * ((sigma / r)**12 - (sigma / r)**6)

# Lennard-Jones force
def F(r, epsilon=1.0, sigma=1.0):
    return 24 * epsilon * (2 * (sigma / r)**12 - (sigma / r)**6) / r

# Initial guess for equilibrium structure
r0 = np.array([[0, 0, 0], [1, 0, 0], [2, 0, 0], [3, 0, 0], [4, 0, 0]], dtype=float)

# Newton-Raphson optimization
def optimize_structure(r0, epsilon=1.0, sigma=1.0, tol=1e-6, max_iter=100):
    r = r0
    for i in range(max_iter):
        # Calculate forces on each atom
        forces = np.zeros_like(r)
        for j in range(len(r)):
            for k in range(len(r)):
                if j != k:
                    rij = np.linalg.norm(r[j] - r[k])
                    forces[j] += F(rij, epsilon, sigma) * (r[j] - r[k]) / rij
        
        # Calculate potential energy
        U_total = 0
        for j in range(len(r)):
            for k in range(j):
                rij = np.linalg.norm(r[j] - r[k])
                U_total += U(rij, epsilon, sigma)

        # Update atom positions
        r_new = r - forces / U_total
        if np.linalg.norm(r_new - r) < tol:
            return r_new
        r = r_new
    return None

# Optimize the chemical structure
r_opt = optimize_structure(r0)

# Plot the optimized structure

fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(111, projection='3d')
ax.scatter(r0[:, 0], r0[:, 1], r0[:, 2], color='r', label='Initial Structure')
ax.scatter(r_opt[:, 0], r_opt[:, 1], r_opt[:, 2], color='b', label='Optimized Structure')
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
ax.legend()
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[3], line 49[0m
[1;32m     47[0m ax [38;5;241m=[39m fig[38;5;241m.[39madd_subplot([38;5;241m111[39m, projection[38;5;241m=[39m[38;5;124m'[39m[38;5;124m3d[39m[38;5;124m'[39m)
[1;32m     48[0m ax[38;5;241m.[39mscatter(r0[:, [38;5;241m0[39m], r0[:, [38;5;241m1[39m], r0[:, [38;5;241m2[39m], color[38;5;241m=[39m[38;5;124m'[39m[38;5;124mr[39m[38;5;124m'[39m, label[38;5;241m=[39m[38;5;124m'[39m[38;5;124mInitial Structure[39m[38;5;124m'[39m)
[0;32m---> 49[0m ax[38;5;241m.[39mscatter([43mr_opt[49m[43m[[49m[43m:[49m[43m,[49m[43m [49m[38;5;241;43m0[39;49m[43m][49m, r_opt[:, [38;5;241m1[39m], r_opt[:, [38;5;241m2[39m], color[38;5;241m=[39m[38;5;124m'[39m[38;5;124mb[39m[38;5;124m'[39m, label[38;5;241m=[39m[38;5;124m'[39m[38;5;124mOptimized Structure[39m[38;5;124m'[39m)
[1;32m     50[0m ax[38;5;241m.[39mset_xlabel([38;5;124m'[39m[38;5;124mX[39m[38;5;124m'[39m)
[1;32m     51[0m ax[38;5;241m.[39mset_ylabel([38;5;124m'[39m[38;5;124mY[39m[38;5;124m'[39m)

[0;31mTypeError[0m: 'NoneType' object is not subscriptable

