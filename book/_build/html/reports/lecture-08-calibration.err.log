Traceback (most recent call last):
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Calculate the confidence interval
def confidence_interval_slope(x, residuals, confidence_level):
    # Calculate the standard error of the slope
    se = se_slope(x, residuals)

    # Calculate the critical t-value
    n_data_points = len(x)
    df = n_data_points - 2  # degrees of freedom
    alpha = 1 - confidence_level
    critical_t_value = t.ppf(1 - alpha/2, df)

    # Calculate the confidence interval
    return critical_t_value * se

# Calculate the 95% confidence interval for the slope
print(f"slope: {slope:.3f} +/- {confidence_interval_slope(concentration, residuals, 0.95):.3f}")
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[5], line 16[0m
[1;32m     13[0m     [38;5;28;01mreturn[39;00m critical_t_value [38;5;241m*[39m se
[1;32m     15[0m [38;5;66;03m# Calculate the 95% confidence interval for the slope[39;00m
[0;32m---> 16[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mslope: [39m[38;5;132;01m{[39;00mslope[38;5;132;01m:[39;00m[38;5;124m.3f[39m[38;5;132;01m}[39;00m[38;5;124m +/- [39m[38;5;132;01m{[39;00m[43mconfidence_interval_slope[49m[43m([49m[43mconcentration[49m[43m,[49m[38;5;250;43m [39;49m[43mresiduals[49m[43m,[49m[38;5;250;43m [39;49m[38;5;241;43m0.95[39;49m[43m)[49m[38;5;132;01m:[39;00m[38;5;124m.3f[39m[38;5;132;01m}[39;00m[38;5;124m"[39m)

Cell [0;32mIn[5], line 10[0m, in [0;36mconfidence_interval_slope[0;34m(x, residuals, confidence_level)[0m
[1;32m      8[0m df [38;5;241m=[39m n_data_points [38;5;241m-[39m [38;5;241m2[39m  [38;5;66;03m# degrees of freedom[39;00m
[1;32m      9[0m alpha [38;5;241m=[39m [38;5;241m1[39m [38;5;241m-[39m confidence_level
[0;32m---> 10[0m critical_t_value [38;5;241m=[39m [43mt[49m[38;5;241m.[39mppf([38;5;241m1[39m [38;5;241m-[39m alpha[38;5;241m/[39m[38;5;241m2[39m, df)
[1;32m     12[0m [38;5;66;03m# Calculate the confidence interval[39;00m
[1;32m     13[0m [38;5;28;01mreturn[39;00m critical_t_value [38;5;241m*[39m se

[0;31mNameError[0m: name 't' is not defined

