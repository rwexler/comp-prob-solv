Traceback (most recent call last):
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/robertwexler/miniconda3/envs/comp-prob-solv/lib/python3.9/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Run the KMC simulation
for step in range(num_steps):
    # Determine possible moves
    possible_moves = []
    for offset in neighbor_offsets:

        # Calculate the neighbor position (wrap around for periodic boundary conditions)
        neighbor = [
            (vacancy_position[i] + offset[i]) % lattice_size
            for i in range(3)
        ]
        possible_moves.append(neighbor)
    
    # Assign probabilities to each move (uniform here)
    probabilities = [rate_constant for _ in possible_moves]
    probabilities /= np.sum(probabilities)
    
    # Select the move based on probabilities
    chosen_move_idx = np.random.choice(len(possible_moves), p=probabilities)
    print(chosen_move_idx)
    print(posible_moves)
    new_position = possible_moves[chosen_move_idx]
    print(new_position)
    break
    
    # Update the lattice and the vacancy position
    lattice[tuple(vacancy_position)] = 0
    lattice[tuple(new_position)] = 1
    vacancy_position = new_position
    vacancy_positions.append(tuple(vacancy_position))
    
    # Update time
    total_rate = np.sum(probabilities) * attempt_frequency
    time += -np.log(np.random.random()) / total_rate
------------------

----- stdout -----
1
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[10], line 21[0m
[1;32m     19[0m chosen_move_idx [38;5;241m=[39m np[38;5;241m.[39mrandom[38;5;241m.[39mchoice([38;5;28mlen[39m(possible_moves), p[38;5;241m=[39mprobabilities)
[1;32m     20[0m [38;5;28mprint[39m(chosen_move_idx)
[0;32m---> 21[0m [38;5;28mprint[39m([43mposible_moves[49m)
[1;32m     22[0m new_position [38;5;241m=[39m possible_moves[chosen_move_idx]
[1;32m     23[0m [38;5;28mprint[39m(new_position)

[0;31mNameError[0m: name 'posible_moves' is not defined

